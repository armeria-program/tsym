
extends cpputest

snippet cl "empty class" b
namespace tsym {
    class ${1:name} {
        public:
            ${1/(\w+).*/$1/}();
            ~${1/(\w+).*/$1/}();

        private:
    };
}
endsnippet

snippet '^cbp' "const BasePtr without tsym namespace scope" r
const tsym::BasePtr
endsnippet

snippet '^(\s+)cbp' "const BasePtr within tsym namespace scope" r
`!p snip.rv = match.group(1) + 'const BasePtr'`
endsnippet

snippet '^(.*\w+.*)cbp' "const BasePtr& within tsym namespace scope" r
`!p snip.rv = match.group(1) + 'const BasePtr&'`
endsnippet

snippet '^bp' "BasePtr without tsym" r
tsym::BasePtr
endsnippet

snippet '( +)bp' "BasePtr within tsym" r
`!p snip.rv = match.group(1) + 'BasePtr'`
endsnippet

snippet '^bpl' "BasePtrList without tsym namespace" r
tsym::BasePtrList
endsnippet

snippet '^(\s+)bpl' "BasePtrList within tsym namespace" r
`!p snip.rv = match.group(1) + 'BasePtrList'`
endsnippet

snippet cbpl "const BasePtrList&"
const BasePtrList&
endsnippet

snippet t
tsym::
endsnippet

snippet ns "namespace tsym" b!
namespace tsym {
}
endsnippet

snippet pro "Product creation" w
Product::create($1)$0
endsnippet

snippet minus "Product negative creation" w
Product::minus($1)$0
endsnippet

snippet pow "Power creation" w
Power::create($1)$0
endsnippet

snippet sum "Sum creation" w
Sum::create($1)$0
endsnippet

snippet num "Numeric creation" w
Numeric::create($1)$0
endsnippet
