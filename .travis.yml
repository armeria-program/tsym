language: cpp

dist: trusty
sudo: required

branches:
  only:
    - develop

git:
    depth: 3

before_install:
  - export BOOSTVER=1_66_0
  - export BOOSTDIR="${PWD}/boost_${BOOSTVER}"
  - wget https://downloads.sourceforge.net/project/boost/boost/${BOOSTVER//_/.}/boost_${BOOSTVER}.tar.bz2
  - tar xf boost_${BOOSTVER}.tar.bz2
  - wget https://github.com/cpputest/cpputest/releases/download/v3.8/cpputest-3.8.tar.gz
  - tar xf cpputest-3.8.tar.gz
  - cd ./cpputest-3.8
  - CC=gcc-6 CXX=g++-6 CXXFLAGS="-O2" CFLAGS="-O2" ./configure --enable-std-cpp11 --prefix=/usr --disable-memory-leak-detection
  - make
  - sudo make install
  - cd ..
  - gem install coveralls-lcov
  - sudo apt-get -qq update
  - export CXXDEBUGFLAGS="-O0 -g3 -std=c++14 -pedantic -Wall -Wextra -Wconversion -fPIC" export
  - export CDEBUGFLAGS="-O0 -g3 -fPIC"

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-5
      - g++-6
      - g++-7
      - lcov
      - valgrind

matrix:
  include:
    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-5
          - _CC=gcc-5

    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-6
          - _CC=gcc-6

    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-7
          - _CC=gcc-7

    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-7
          - _CC=gcc-7
          - COVERAGE=--coverage

    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-7
          - _CC=gcc-7
          - CXXFLAGS="-fsanitize=address -fno-omit-frame-pointer $CXXDEBUGFLAGS"
          - CFLAGS="-fsanitize=address -fno-omit-frame-pointer $CDEBUGFLAGS"
          - LIBS=-lasan

    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-7
          - _CC=gcc-7
          - CXXFLAGS=$CXXDEBUGFLAGS
          - CFLAGS=$CDEBUGFLAGS
          - TOOL="valgrind --error-exitcode=1 --leak-check=full"

    - os: linux
      compiler: gcc
      env:
          - _CXX=g++-7
          - _CCC=gcc-7
          - COVERAGE="-pg"

    - os: linux
      compiler: clang
      env:
          - _CXX=clang++
          - _CC=clang

script:
  - make CXX=${_CXX} CC=${_CC} CPPFLAGS="-isystem ${BOOSTDIR} -I src" lib staticlib tests
  - cat build/buildinfo.h
  - $TOOL ./build/runtests

after_success:
  - lcov -c -d . -o build/coverage.info
  - lcov --remove build/coverage.info '*/include/*' '*/boost/*' -o build/filtered.info
  - test -f build/filtered.info && coveralls-lcov build/filtered.info
  - test -f gmon.out && gprof ./build/runtests gmon.out | head -n 100
